/* ========================
   light-theme.css - Editor Specific Overrides
   ======================== */

/* Note: Main theming is now handled in globals.css */
/* This file contains only editor-specific light theme customizations */

/* Light theme variables - these are already defined in globals.css */
/* This section is for any light-specific overrides if needed */

/* Light theme specific CSS variables for editor components */
.light {
  /* Editor syntax highlighting - Light mode */
  --code-bg: 248 250 252; /* slate-50 */
  --code-border: 226 232 240; /* slate-200 */
  --code-text: 15 23 42; /* slate-900 */
  --code-comment: 100 116 139; /* slate-500 */
  --code-keyword: 59 130 246; /* blue-500 */
  --code-string: 34 197 94; /* green-500 */
  --code-number: 147 51 234; /* violet-600 */
  --code-function: 168 85 247; /* violet-500 */
}

/* Light theme specific editor styles */
.light .editor-container {
  background: hsl(var(--surface));
  border: 1px solid hsl(var(--border));
  box-shadow: var(--elevation-1);
  transition: box-shadow 0.2s ease;
}

/* BlockNote editor background and text color for light mode */
.light .bn-editor {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

.light .bn-editor * {
  color: hsl(var(--foreground)) !important;
}

.light .editor-container:focus-within {
  box-shadow: var(--elevation-2);
  border-color: hsl(var(--ring));
}

.light .toolbar {
  background: hsl(var(--surface-variant));
  border-bottom: 1px solid hsl(var(--border));
  border-radius: 0.75rem 0.75rem 0 0;
}

.light .toolbar button.toolbar-item {
  color: hsl(var(--foreground));
  transition: all 0.2s ease;
  border-radius: 0.5rem;
}

.light .toolbar button.toolbar-item:hover:not([disabled]) {
  background: hsl(var(--muted));
  transform: translateY(-1px);
  box-shadow: var(--elevation-1);
}

.light .toolbar button.toolbar-item.active {
  background: hsl(var(--primary-subtle));
  color: hsl(var(--primary));
}

.light .toolbar .divider {
  background: hsl(var(--border));
  opacity: 0.8;
}

.light .editor-inner {
  background: hsl(var(--surface));
  border-radius: 0 0 0.75rem 0.75rem;
}

/* Ensure the editor content area has the correct background */
.light .bn-editor-content {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

.light .editor-input {
  color: hsl(var(--foreground));
  caret-color: hsl(var(--primary));
  line-height: 1.7;
}

.light .editor-placeholder {
  color: hsl(var(--muted-foreground));
}

/* Lexical Editor - Light Theme Enhancements */
.editor-container {
  background: hsl(var(--surface));
  border: 1px solid hsl(var(--border));
  box-shadow: var(--elevation-1);
  transition: box-shadow 0.2s ease;
}

.editor-container:focus-within {
  box-shadow: var(--elevation-2);
  border-color: hsl(var(--ring));
}

.toolbar {
  background: hsl(var(--surface-variant));
  border-bottom: 1px solid hsl(var(--border));
  border-radius: 0.75rem 0.75rem 0 0;
}

.toolbar button.toolbar-item {
  color: hsl(var(--foreground));
  transition: all 0.2s ease;
  border-radius: 0.5rem;
}

.toolbar button.toolbar-item:hover:not([disabled]) {
  background: hsl(var(--muted));
  transform: translateY(-1px);
  box-shadow: var(--elevation-1);
}

.toolbar button.toolbar-item.active {
  background: hsl(var(--primary-subtle));
  color: hsl(var(--primary));
}

.toolbar .divider {
  background: hsl(var(--border));
  opacity: 0.8;
}

.editor-inner {
  background: hsl(var(--surface));
  border-radius: 0 0 0.75rem 0.75rem;
}

.editor-input {
  color: hsl(var(--foreground));
  caret-color: hsl(var(--primary));
  line-height: 1.7;
}

.editor-placeholder {
  color: hsl(var(--muted-foreground));
}

/* Code styling - Light theme */
.light .editor-code {
  background: hsl(var(--code-bg));
  border: 1px solid hsl(var(--code-border));
  color: hsl(var(--code-text));
  font-family: "JetBrains Mono", "Menlo", "Monaco", "Consolas", monospace;
  position: relative;
  box-shadow: var(--elevation-1);
}

.light .editor-text-code {
  background: hsl(var(--muted));
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--border));
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
}

/* Syntax highlighting tokens - Light theme */
.light .editor-tokenComment {
  color: hsl(var(--code-comment));
  font-style: italic;
}

.light .editor-tokenPunctuation {
  color: hsl(var(--foreground));
}

.light .editor-tokenProperty {
  color: hsl(var(--code-keyword));
  font-weight: 500;
}

.light .editor-tokenSelector {
  color: hsl(var(--code-string));
  font-weight: 500;
}

.light .editor-tokenOperator {
  color: hsl(var(--code-keyword));
}

.light .editor-tokenAttr {
  color: hsl(var(--code-keyword));
}

.light .editor-tokenVariable {
  color: hsl(var(--code-number));
}

.light .editor-tokenFunction {
  color: hsl(var(--code-function));
  font-weight: 500;
}

.light .editor-tokenKeyword {
  color: hsl(var(--code-keyword));
  font-weight: 600;
}

.light .editor-tokenString {
  color: hsl(var(--code-string));
}

.light .editor-tokenNumber {
  color: hsl(var(--code-number));
  font-weight: 500;
}

/* Enhanced headings with better spacing - Light theme */
.light .editor-heading-h1 {
  border-bottom: 2px solid hsl(var(--border));
  padding-bottom: 0.5rem;
  margin-bottom: 1.5rem;
  color: hsl(var(--foreground));
}

.light .editor-heading-h2 {
  color: hsl(var(--foreground));
  margin-top: 2rem;
  margin-bottom: 1rem;
}

.light .editor-heading-h3 {
  color: hsl(var(--foreground));
  margin-top: 1.5rem;
  margin-bottom: 0.75rem;
}

/* Enhanced quote styling - Light theme */
.light .editor-quote {
  background: hsl(var(--muted) / 0.3);
  border-left: 4px solid hsl(var(--primary));
  border-radius: 0 0.5rem 0.5rem 0;
  padding: 1rem 1.5rem;
  margin: 1.5rem 0;
  position: relative;
}

.light .editor-quote::before {
  content: '"';
  font-size: 3rem;
  color: hsl(var(--primary) / 0.4);
  position: absolute;
  top: -0.5rem;
  left: 1rem;
  font-family: Georgia, serif;
}

/* Lists with better styling - Light theme */
.light .editor-list-ol,
.light .editor-list-ul {
  padding-left: 1.5rem;
  margin: 1rem 0;
}

.light .editor-listitem {
  margin: 0.5rem 0;
  line-height: 1.6;
}

.light .editor-list-ul .editor-listitem::marker {
  color: hsl(var(--primary));
}

.light .editor-list-ol .editor-listitem::marker {
  color: hsl(var(--primary));
  font-weight: 600;
}

/* Tree view for debugging - Light theme */
.light .tree-view-output {
  background: hsl(var(--muted));
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--border));
  font-family: "JetBrains Mono", monospace;
  font-size: 0.75rem;
  line-height: 1.4;
}

/* Clerk overrides for light theme */
.light .cl-avatarBox {
  border: 2px solid hsl(var(--primary));
  box-shadow: var(--elevation-1);
  transition: all 0.2s ease;
}

.light .cl-avatarBox:hover {
  box-shadow: var(--elevation-2);
  transform: scale(1.05);
}

/* Code block enhancements for light theme */
.light .editor-code:before {
  content: attr(data-gutter);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 3rem;
  background: hsl(var(--border));
  color: hsl(var(--muted-foreground));
  padding: 0.75rem 0.5rem;
  text-align: right;
  font-size: 0.75rem;
  border-right: 1px solid hsl(var(--border));
}

.light .editor-code:after {
  content: attr(data-highlight-language);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: hsl(var(--muted));
  color: hsl(var(--muted-foreground));
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  border-radius: 0.25rem;
  border: 1px solid hsl(var(--border));
}

/* Improved scrollbars for light theme */
.light .editor-inner::-webkit-scrollbar,
.light pre::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.light .editor-inner::-webkit-scrollbar-track,
.light pre::-webkit-scrollbar-track {
  background: hsl(var(--muted) / 0.2);
  border-radius: 4px;
}

.light .editor-inner::-webkit-scrollbar-thumb,
.light pre::-webkit-scrollbar-thumb {
  background: hsl(var(--border));
  border-radius: 4px;
  transition: background 0.2s ease;
}

.light .editor-inner::-webkit-scrollbar-thumb:hover,
.light pre::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground) / 0.6);
}

/* Focus improvements - Light theme */
.light .editor-inner:focus-within .editor-input {
  outline: none;
}

/* Selection styling - Light theme */
.light .editor-input::selection {
  background: hsl(var(--primary) / 0.2);
  color: hsl(var(--foreground));
}

/* BlockNote specific overrides for light theme */
.light [data-bn-type="editor"] {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="editor"] * {
  color: hsl(var(--foreground)) !important;
}

.light .bn-editor {
  background: transparent !important;
  color: hsl(var(--foreground)) !important;
}

.light .bn-editor * {
  color: inherit !important;
}

.light .bn-inline-content {
  color: hsl(var(--foreground)) !important;
}

.light .bn-block-content {
  color: hsl(var(--foreground)) !important;
}

/* Additional BlockNote text visibility fixes */
.light [data-bn-type="text"] {
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="paragraph"] {
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="heading"] {
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="list"] {
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="listitem"] {
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="quote"] {
  color: hsl(var(--foreground)) !important;
}

.light [data-bn-type="code"] {
  color: hsl(var(--foreground)) !important;
}

/* Ensure all text elements in the editor are visible */
.light .bn-editor [contenteditable="true"] {
  color: hsl(var(--foreground)) !important;
  background: hsl(var(--surface)) !important;
}

.light .bn-editor [contenteditable="true"] * {
  color: hsl(var(--foreground)) !important;
  background: transparent !important;
}

/* Force text visibility in light mode for all BlockNote elements */
.light .bn-editor,
.light .bn-editor *,
.light [data-bn-type],
.light [data-bn-type] * {
  color: hsl(var(--foreground)) !important;
  background: hsl(var(--surface)) !important;
}

/* Specific overrides for common text elements */
.light p,
.light h1,
.light h2,
.light h3,
.light h4,
.light h5,
.light h6,
.light li,
.light blockquote,
.light code,
.light pre {
  color: hsl(var(--foreground)) !important;
}

/* Ensure placeholder text is visible but muted */
.light .bn-editor [data-placeholder] {
  color: hsl(var(--muted-foreground)) !important;
}

/* Override any remaining dark backgrounds in BlockNote */
.light .bn-editor,
.light .bn-editor-content,
.light [data-bn-type="editor"],
.light [data-bn-type="editor"] > *,
.light .bn-block-content,
.light .bn-inline-content {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Ensure the editor container itself has the right background */
.light .editor-container .bn-editor {
  background: hsl(var(--surface)) !important;
}

/* More aggressive overrides for BlockNote dark backgrounds */
.light .bn-editor,
.light .bn-editor *,
.light [data-bn-type],
.light [data-bn-type] *,
.light .bn-block,
.light .bn-block *,
.light .bn-inline,
.light .bn-inline * {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Override any inline styles that might be applied */
.light .bn-editor[style*="background"],
.light .bn-editor *[style*="background"] {
  background: hsl(var(--surface)) !important;
}

.light .bn-editor[style*="color"],
.light .bn-editor *[style*="color"] {
  color: hsl(var(--foreground)) !important;
}

/* Force all BlockNote elements to use light theme */
.light .bn-editor,
.light .bn-editor *,
.light [data-bn-type],
.light [data-bn-type] *,
.light .bn-block,
.light .bn-block *,
.light .bn-inline,
.light .bn-inline *,
.light .bn-editor-content,
.light .bn-editor-content *,
.light .bn-block-content,
.light .bn-block-content *,
.light .bn-inline-content,
.light .bn-inline-content * {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Override any remaining dark theme styles */
.light .bn-editor[class*="dark"],
.light .bn-editor *[class*="dark"] {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Override BlockNote core styles for light mode */
.light .bn-editor,
.light .bn-editor *,
.light [data-bn-type],
.light [data-bn-type] *,
.light .bn-block,
.light .bn-block *,
.light .bn-inline,
.light .bn-inline *,
.light .bn-editor-content,
.light .bn-editor-content *,
.light .bn-block-content,
.light .bn-block-content *,
.light .bn-inline-content,
.light .bn-inline-content *,
.light [contenteditable="true"],
.light [contenteditable="true"] * {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Override any BlockNote default styles */
.light .bn-editor[style],
.light .bn-editor *[style] {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Target the specific BlockNote editor structure */
.light .bn-editor,
.light .bn-editor > div,
.light .bn-editor > div > div,
.light .bn-editor > div > div > div {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Override any remaining dark backgrounds with maximum specificity */
.light .editor-container .bn-editor,
.light .editor-container .bn-editor *,
.light .editor-container [data-bn-type],
.light .editor-container [data-bn-type] * {
  background: hsl(var(--surface)) !important;
  color: hsl(var(--foreground)) !important;
}

/* Additional light theme specific improvements */
.light .debug-timetravel-panel {
  background: hsl(var(--surface));
  border: 1px solid hsl(var(--border));
  box-shadow: var(--elevation-1);
}

.light .debug-timetravel-panel-button {
  color: hsl(var(--foreground));
  transition: all 0.2s ease;
}

.light .debug-timetravel-panel-button:hover {
  background: hsl(var(--muted));
  transform: translateY(-1px);
}

.light .debug-timetravel-button {
  color: hsl(var(--foreground));
  background: hsl(var(--surface));
  border: 1px solid hsl(var(--border));
  box-shadow: var(--elevation-1);
  transition: all 0.2s ease;
}

.light .debug-timetravel-button:hover {
  background: hsl(var(--muted));
  box-shadow: var(--elevation-2);
  transform: translateY(-1px);
}
